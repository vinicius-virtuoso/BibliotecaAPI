{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management API",
    "description": "Book loan management application in a library.",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "http://localhost:3000/", "description": "Api de teste" },
    {
      "url": "http://library-management-api/",
      "description": "Api de produção"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": ["Login/Register"],
        "summary": "User Login",
        "description": "Generate User Authentication Token",
        "operationId": "userLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Login/Register"],
        "summary": "Register User",
        "description": "Register the new user, if 'is_staff' is true then it is library member",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email/Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },

          "409": {
            "description": "Email/Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List Users",
        "description": "Only employees can access this route.",
        "tags": ["Users"],
        "operationId": "listUsers",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "summary": "Retrieves a user",
        "description": "Only account owner or employees can access this route.",
        "tags": ["Users"],
        "operationId": "RetrieveUser",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update User",
        "description": "Update an existing user by ID",
        "operationId": "updateUser",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdatePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Delete an existing user by ID",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user to deleted",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "post": {
        "summary": "Create a new book",
        "description": "Only employees can access this route.",
        "tags": ["Books"],
        "operationId": "createBook",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a new book successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Book already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all books existing",
        "description": "Everyone can access",
        "tags": ["Books"],
        "operationId": "listBook",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/books/{book_id}": {
      "get": {
        "summary": "Retrieve a book",
        "description": "Everyone can access",
        "tags": ["Books"],
        "operationId": "RetrieveBook",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "description": "ID of the book to retrieve",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "is_staff": {
            "type": "boolean",
            "default": false
          },
          "is_blocked_loans": {
            "type": "boolean",
            "default": false
          },
          "date_unlock": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "default": null
          }
        }
      },
      "UserRegisterPayload": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "is_staff": {
            "type": "boolean",
            "default": false
          }
        },
        "required": ["name", "username", "email", "password"]
      },
      "UserUpdatePayload": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "$ref": "#/components/schemas/User"
      },
      "LoginPayload": {
        "type": "object",
        "properties": {
          "username_or_email": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["username_or_email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "Book": {
        "type": "object",
        "properties": {
          "book_id": {
            "type": "string"
          },
          "book_title": {
            "type": "string"
          },
          "book_synopsis": {
            "type": "string"
          },
          "book_author": {
            "type": "string"
          },
          "book_pages": {
            "type": "integer"
          },
          "book_language": {
            "type": "string"
          },
          "book_date_release": {
            "type": "string",
            "format": "date-time"
          },
          "book_availability": {
            "type": "boolean"
          },
          "copy": {
            "type": "object",
            "properties": {
              "copy_id": {
                "type": "string"
              },
              "copy_quantity": {
                "type": "integer"
              },
              "copy_created_at": {
                "type": "string",
                "format": "date"
              }
            },
            "required": ["copy_id", "copy_quantity", "copy_created_at"]
          },
          "count_followers": {
            "type": "integer"
          },
          "followers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BookPayload": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "synopsis": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "language": {
            "type": "string",
            "default": "en-US"
          },
          "pages": {
            "type": "integer",
            "default": 50
          },
          "date_release": {
            "type": "string",
            "format": "date"
          },
          "quantity_copy": {
            "type": "integer",
            "default": 10
          }
        },
        "required": [
          "title",
          "synopsis",
          "author",
          "pages",
          "date_release",
          "quantity_copy"
        ]
      },
      "BookResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "synopsis": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "pages": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "date_release": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string"
          },
          "availability": {
            "type": "boolean"
          },
          "copy": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "integer"
              }
            },
            "required": ["quantity"]
          }
        },
        "required": [
          "title",
          "synopsis",
          "author",
          "pages",
          "language",
          "date_release",
          "id",
          "availability",
          "copy"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "apiKey": "bibliote_api_test",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
